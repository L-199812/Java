/**
 * @Auther King
 * @Description:
 */

// 在面向对象思想中,所有的对象都是类来描绘的,但是不是所有的类都可以描绘对象
// 没有足够的信息来描述一个对象的类称为抽象类,java中是在类前面加abstract,C++中是有virtual修饰的纯虚函数就是抽象类
// 抽象方法:abstract修饰的没有具体实现的方法
// 抽象类不能实例化对象,抽象类存在的意义就是被继承
// 如果一个类继承了一个抽象类就必须重写父类的抽象方法,但是是抽象类继承抽象类就不需要重写
// 抽象方法不能是私有的不能被private\final\static修饰
// 普通的类也可以被继承和重写,为什么非要抽象类,因为继承抽象类不重写的话编译器会检查出错误,也就是多了一个校验

// 接口
// 公共规范标准,在程序中就是行为方法的规范
// 1.使用Interface来修饰接口
// 2.接口当中的成员方法不能有具体的实现,JDK1.8之后允许有default修饰的可以实现的防范,可以有静态方法
// 3.接口不能被实例化
// 4.类和接口之间用implements,有点类继承接口的意思,然后再用类去实例化对象
// 5.一般情况下一个接口就是一个Java文件,是抽象类的更进一步
// 6.一个类可以实现多个接口,可以解决多继承的问题,extends 和implements可以同时使用,既继承一个类和多个接口
// 7.继承是is a  接口直接有功能就好了不用管是否是继承
// 8.接口间的继承就是把多个接口集成在一起
public class class6 {
}

//object类是所有类的父类,自己写的类,就算没显式说明继承object类,其实也是继承的
